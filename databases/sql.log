timestamp: 2016-02-09T16:33:37.884000
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512)
);
success!
timestamp: 2016-02-09T16:33:38.027000
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2016-02-09T16:33:38.174000
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-02-09T16:33:38.283000
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  ,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2016-02-09T16:33:38.433000
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2016-02-09T16:33:38.595000
CREATE TABLE auth_cas(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    created_on TIMESTAMP,
    service CHAR(512),
    ticket CHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2016-02-09T16:33:38.736000
CREATE TABLE department(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name CHAR(512) UNIQUE,
    short_name CHAR(512) UNIQUE
);
success!
timestamp: 2016-02-09T16:33:38.886000
CREATE TABLE course(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    department_id INTEGER REFERENCES department (id) ON DELETE CASCADE  ,
    course_num CHAR(512),
    name CHAR(512) UNIQUE,
    description TEXT
);
success!
timestamp: 2016-02-09T16:33:39.007000
CREATE TABLE professor(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(512),
    last_name CHAR(512),
    image CHAR(512),
    department_id INTEGER REFERENCES department (id) ON DELETE CASCADE  ,
    saltiness DOUBLE,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    datetime TIMESTAMP
);
success!
timestamp: 2016-02-09T16:33:39.196000
CREATE TABLE ucscClass(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    course_id INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    syllabus TEXT,
    quarter CHAR(512),
    yr INTEGER,
    term CHAR(512),
    difficulty DOUBLE,
    enjoyment DOUBLE,
    textbook_ids TEXT,
    professor_id INTEGER REFERENCES professor (id) ON DELETE CASCADE  ,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    datetime TIMESTAMP
);
success!
timestamp: 2016-02-09T16:33:39.351000
CREATE TABLE classReview(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    ucscClass_id INTEGER REFERENCES ucscClass (id) ON DELETE CASCADE  ,
    professor_id INTEGER REFERENCES professor (id) ON DELETE CASCADE  ,
    body TEXT,
    quarter CHAR(512),
    yr CHAR(512),
    rating DOUBLE,
    datetime TIMESTAMP
);
success!
timestamp: 2016-02-09T16:33:39.498000
CREATE TABLE post(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    ucscClass_id INTEGER REFERENCES ucscClass (id) ON DELETE CASCADE  ,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    title CHAR(512) NOT NULL,
    forumSection CHAR(512),
    body TEXT NOT NULL,
    price INTEGER,
    status CHAR(1),
    datetime TIMESTAMP,
    image CHAR(512)
);
success!
timestamp: 2016-02-09T16:33:39.736000
CREATE TABLE comm(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    post_id INTEGER REFERENCES post (id) ON DELETE CASCADE  ,
    body TEXT,
    datetime TIMESTAMP
);
success!
timestamp: 2016-02-09T16:33:39.989000
CREATE TABLE studentGrade(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    grade TEXT,
    ucscClass_id INTEGER REFERENCES ucscClass (id) ON DELETE CASCADE  ,
    datetime TIMESTAMP
);
success!
timestamp: 2016-02-09T16:33:40.181000
CREATE TABLE profReview(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    professor_id INTEGER REFERENCES professor (id) ON DELETE CASCADE  ,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    course_id INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    quarter CHAR(512),
    yr CHAR(512),
    review TEXT,
    helpfulness CHAR(512),
    clarity CHAR(512),
    easiness CHAR(512),
    rating DOUBLE,
    datetime TIMESTAMP
);
success!
timestamp: 2016-02-09T16:33:40.398000
CREATE TABLE note(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title CHAR(512),
    notefile CHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    datetime TIMESTAMP
);
success!
timestamp: 2016-02-09T16:33:40.669000
CREATE TABLE noteFolder(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title CHAR(512),
    body TEXT,
    note_id INTEGER REFERENCES note (id) ON DELETE CASCADE  ,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    course_id INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    professor_id INTEGER REFERENCES professor (id) ON DELETE CASCADE  ,
    notetype CHAR(512),
    datetime TIMESTAMP
);
success!
timestamp: 2016-02-09T16:33:41.040000
CREATE TABLE textbook(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title CHAR(512),
    author TEXT,
    publication_year INTEGER,
    isbn INTEGER UNIQUE
);
success!
timestamp: 2016-02-09T16:33:41.267000
CREATE TABLE courseTopic(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    board_id INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    title CHAR(512),
    quarter CHAR(512),
    yr INTEGER,
    op INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    datePosted TIMESTAMP,
    body TEXT
);
success!
timestamp: 2016-02-09T16:33:41.512000
CREATE TABLE courseReply(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    topic_id INTEGER REFERENCES courseTopic (id) ON DELETE CASCADE  ,
    board_id INTEGER REFERENCES courseTopic (id) ON DELETE CASCADE  ,
    op INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    replyOp INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    datePosted TIMESTAMP,
    body TEXT
);
success!
timestamp: 2016-02-09T16:33:41.806000
CREATE TABLE courseTopicReply(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    topic_id INTEGER REFERENCES courseReply (id) ON DELETE CASCADE  ,
    board_id INTEGER REFERENCES courseReply (id) ON DELETE CASCADE  ,
    replyOp INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    datePosted TIMESTAMP,
    body TEXT
);
success!
